#配置pytest

[pytest]

#命令行参数（可添加多个，以空格分隔）
#addopts = -s --html=./report.html  # 生成测试结果的HTML报告
#addopts = -s -n auto  # 自适应并发执行（当用例多的时候使用，用例少反而会变慢）
#addopts = -s --env prod  # 生产环境
addopts = -s --env test --alluredir ./allure-result/ --clean-alluredir

# 生成allure结果命令
# pytest --alluredir ./results/ --clean-alluredir     # 执行用例，并生成allure结果，--clean选项会先清空再创建
# pytest --allure_features='aa' --allure_stories='bb'   # 执行指定的feature和story

# 生成allure报告命令
# allure generate ./results/ -o ./allure-report/ --clean    # --clean选项会先清空再创建

#执行路径
testpaths = test_scripts/

#搜索的文件名
python_files = test_*.py

#搜索的类名
python_classes = Test*

#搜索的函数名
python_functions = test_*

# 控制台输出日志内容（默认False，设置为True时会显示详细测试状态）
log_cli = True

# 控制台显示中文
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = True
